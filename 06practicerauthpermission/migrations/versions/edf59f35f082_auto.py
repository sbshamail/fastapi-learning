"""auto

Revision ID: edf59f35f082
Revises:
Create Date: 2025-08-04 14:31:29.812613

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'edf59f35f082'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user_role',
        sa.Column(
            'created_at',
            sa.DateTime(),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            nullable=True,
        ),
        sa.Column(
            'id',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'title',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            'permissions',
            sa.JSON(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user',
        sa.Column(
            'created_at',
            sa.DateTime(),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            nullable=True,
        ),
        sa.Column(
            'id',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'full_name',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            'email',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            'password',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            'phone',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            'is_active',
            sa.Boolean(),
            nullable=False,
        ),
        sa.Column(
            'gender',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            'age',
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            'role_id',
            sa.Integer(),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['user_role.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'product',
        sa.Column(
            'created_at',
            sa.DateTime(),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            nullable=True,
        ),
        sa.Column(
            'id',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'name',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            'description',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            'price',
            sa.Float(),
            nullable=False,
        ),
        sa.Column(
            'user_id',
            sa.Integer(),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product')
    op.drop_table('user')
    op.drop_table('user_role')
    # ### end Alembic commands ###
